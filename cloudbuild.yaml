steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'asia-south1-docker.pkg.dev/$PROJECT_ID/test-tf/flask-app:$COMMIT_SHA', '.']
  
  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'asia-south1-docker.pkg.dev/$PROJECT_ID/test-tf/flask-app:$COMMIT_SHA']

  # Add approval step
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'approval'
    args:
    - 'builds'
    - 'submit'
    - '--config=approval.yaml'
    - '--async'
    waitFor: ['-']  # Start immediately after previous step
  
  # Wait for approval
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'wait-for-approval'
    args:
    - 'alpha'
    - 'builds'
    - 'workflows'
    - 'wait'
    - '--target-id=${BUILD_ID}'
    waitFor: ['approval']
  
  # Update the deployment after approval
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
    - 'set'
    - 'image'
    - 'deployment/flask-app'
    - 'flask-app=asia-south1-docker.pkg.dev/$PROJECT_ID/test-tf/flask-app:$COMMIT_SHA'
    env:
    - 'CLOUDSDK_COMPUTE_ZONE=asia-south1'  # Replace with your cluster's zone
    - 'CLOUDSDK_CONTAINER_CLUSTER=autopilot-cluster-1-test'    # Replace with your cluster name

images:
  - 'asia-south1-docker.pkg.dev/$PROJECT_ID/test-tf/flask-app:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY 
